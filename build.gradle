/*
 * Copyright (c) 2016.
 *
 * This file is part of ProcessManager.
 *
 * This file is licenced to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You should have received a copy of the license with the source distribution.
 * Alternatively, you may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

import kotlinsql.builder.GenerateDatabaseBaseKt
import kotlinsql.builder.GenerateSelectClasses
import kotlinsql.builder.GenerateStatementsKt


ext {
    if (! rootProject.ext.has('kotlin_version') ) { kotlin_version = '1.0.1-2' }
}

buildscript {

    ext {
        if (! rootProject.ext.has('kotlin_version') ) { kotlin_version = '1.0.1-2' }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }

    repositories {
        jcenter()
    }
}

//sourceCompatibility = JavaVersion.VERSION_1_8
//targetCompatibility = JavaVersion.VERSION_1_8


apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'kotlinsql.builder'


description = 'A utility library for working with databases in kotlin'

repositories {
    jcenter()
}


test {
    useTestNG()
}

sourceSets {
    main {
        generate {
            def depth = 10
            databaseFunctions{
                output = 'gen/DatabaseMethods.kt'
                generator = new kotlinsql.builder.GenerateDatabaseBaseKt(depth)
            }
            selects{
                output = 'gen/selectImpls.kt'
                generator = new kotlinsql.builder.GenerateSelectClasses(depth)
            }
            statements{
                output = 'gen/statementImpls.kt'
                generator = new kotlinsql.builder.GenerateStatementsKt(depth)
            }
            inserts{
                output = 'gen/Inserts.kt'
                generator = new kotlinsql.builder.GenerateInsertsKt(depth)
            }

        }
    }
}


dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    testCompile 'org.testng:testng:6.9.9'
}

idea{
    module {
        downloadSources = true
    }
}