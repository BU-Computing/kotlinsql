/*
 * Copyright (c) 2016.
 *
 * This file is part of ProcessManager.
 *
 * This file is licenced to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You should have received a copy of the license with the source distribution.
 * Alternatively, you may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */


ext {
//    if (! rootProject.hasProperty('kotlin_version') ) { kotlin_version = '1.1-M04' }
    if (! rootProject.hasProperty('myJavaVersion')) { myJavaVersion = org.gradle.api.JavaVersion.VERSION_1_7 }
}

version 0.6

buildscript {

    ext {
        if (! rootProject.hasProperty('kotlin_version') ) { kotlin_version = '1.1-M04' }
        if (! rootProject.hasProperty('codegen_version') ) { codegen_version = '0.5.10' }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "net.devrieze:gradle-codegen:${codegen_version}"
    }

    repositories {
        maven {
            url='https://dl.bintray.com/kotlin/kotlin-eap-1.1'
        }
        mavenLocal()
        jcenter()
    }
}

apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'net.devrieze.gradlecodegen'


description = 'A utility library for working with databases in kotlin'

repositories {
    maven {
        url='https://dl.bintray.com/kotlin/kotlin-eap-1.1'
    }
    jcenter()
}

test {
    useTestNG()
}

sourceSets {
    main {
        generate {
            def depth = 10
            databaseFunctions{
                output = 'uk/ac/bournemouth/util/kotlin/sql/impl/gen/DatabaseMethods.kt'
                generator = "kotlinsql.builder.GenerateDatabaseBaseKt"
                input = depth
            }
            selects{
                output = 'uk/ac/bournemouth/util/kotlin/sql/impl/gen/selectImpls.kt'
                generator = "kotlinsql.builder.GenerateSelectClasses"
                input = depth
            }
            statements{
                output = 'uk/ac/bournemouth/util/kotlin/sql/impl/gen/statementImpls.kt'
                generator = "kotlinsql.builder.GenerateStatementsKt"
                input = depth
            }
            inserts{
                output = 'uk/ac/bournemouth/util/kotlin/sql/impl/gen/Inserts.kt'
                generator = "kotlinsql.builder.GenerateInsertsKt"
                input = depth
            }
        }
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    generatorsCompile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    testCompile 'org.testng:testng:6.9.13.8'
}

idea{
    module {
        downloadSources = true
    }
}

sourceCompatibility = myJavaVersion
targetCompatibility = myJavaVersion
